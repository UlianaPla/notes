{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;;;;AAA0C;AACgB;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2EAA2E,EAAE;AAC7E;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA;;AAEA,YAAY,8BAA8B;;AAE1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,OAAO;;AAE9B,qCAAqC,wDAAQ,GAAG,wDAAQ;;AAExD;AACA;AACA;AACA,gBAAgB,uDAAe;AAC/B;AACA,aAAa;AACb;AACA,gBAAgB,uDAAe;AAC/B,aAAa;AACb;AACA;;AAEA,iEAAe,IAAI,EAAC;;;;;;;;;;;;;;;;;;;AC1I2B;;AAE/C;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,IAAI,iDAAU;AACd;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,gDAAS;AACjB,KAAK;AACL;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;;;AC/EgD;AACT;;AAE5D;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,cAAc;AACpC,sBAAsB,gBAAgB;AACtC,sBAAsB,aAAa;AACnC,sBAAsB,iBAAiB;AACvC,sBAAsB,cAAc;AACpC;AACA,kDAAkD,QAAQ;AAC1D,qDAAqD,QAAQ;AAC7D,oDAAoD,QAAQ;AAC5D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,cAAc;AACpC,sBAAsB,gBAAgB;AACtC,sBAAsB,aAAa;AACnC,sBAAsB,iBAAiB;AACvC,sBAAsB,cAAc;AACpC;AACA,uDAAuD,QAAQ;AAC/D,oDAAoD,QAAQ;AAC5D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,sBAAsB,aAAa;AACnC,sBAAsB,iBAAiB;AACvC,sBAAsB,mBAAmB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,wDAAgB;AAChC,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA,QAAQ,4DAAQ,gBAAgB,QAAQ;AACxC;AACA;AACA,gBAAgB,uDAAe;AAC/B,aAAa;AACb;AACA,gBAAgB,uDAAe;AAC/B,aAAa;AACb;;AAEA;AACA,QAAQ,8DAAU,gBAAgB,OAAO;AACzC;AACA;AACA,gBAAgB,uDAAe;AAC/B,aAAa;AACb;AACA,gBAAgB,uDAAe;AAC/B,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,IAAI;AAC3B,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,aAAa,GAAG,eAAe,GAAG,cAAc;AAClE;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,eAAe,0DAA0D,IAAI,mBAAmB;AAChG;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA,IAAI,2DAAO;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb,SAAS;AACT;;AAEA;;AAEA,iEAAe,KAAK;;;;;;;;;;;;;;;;;;AC7QpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA,2CAA2C,IAAI,YAAY,WAAW;AACtE;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;;;;;;;;;;;AC9CA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,cAAc;AACjD;AACA,GAAG;;;AAGH;AACA;AACA;;AAEA,IAAI,KAA8B;AAClC;AACA;AACA,EAAE,eAAe;AACjB,EAAE,gBAAgB;AAClB;AACA;AACA;AACA;AACA,MAAM,IAAyC;AAC/C;AACA,IAAI,mCAAO;AACX;AACA,KAAK;AAAA,kGAAC;AACN;AACA;AACA,EAAE,EAIC;AACH;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,uBAAuB;AACzC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B;;AAE9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,sBAAsB;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B,qBAAqB;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,6BAA6B,qBAAqB;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA,CAAC,iDAAiD,qBAAM,kBAAkB,qBAAM;;;;;;;;;;;ACzVhF;AACA;AACA;AACA,wBAAwB,iBAAiB;AACzC;AACA;AACA;AACA;;;;;;;UCPA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;ACNA,cAAc,2GAAuC;AAClB;;AAEC;AACA;AACF;;AAElC;;AAEA,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,yDAAI;AACR,CAAC,E","sources":["webpack://notes/./js/modules/form.js","webpack://notes/./js/modules/modal.js","webpack://notes/./js/modules/notes.js","webpack://notes/./js/services/services.js","webpack://notes/./node_modules/es6-promise-polyfill/promise.js","webpack://notes/./node_modules/nodelist-foreach-polyfill/index.js","webpack://notes/webpack/bootstrap","webpack://notes/webpack/runtime/compat get default export","webpack://notes/webpack/runtime/define property getters","webpack://notes/webpack/runtime/global","webpack://notes/webpack/runtime/hasOwnProperty shorthand","webpack://notes/webpack/runtime/make namespace object","webpack://notes/./js/script.js"],"sourcesContent":["import { showThanksModal } from './modal';\nimport { postData, editData } from '../services/services';\n\nconst urlNotes = 'http://localhost:3000/notes';\nconst message = {\n    loading: 'icons/spinner.svg',\n    success: 'Note has been added',\n    successEdit: 'Note has been edited',\n    failure: 'Oops, something went wrong...'\n};\n\nconst dateReg = /(0?[1-9]|[12][0-9]|3[01])[\\/\\/.](0?[1-9]|1[012])[\\/\\/.]\\d{4}/g,\n    dividerSlash = '/', // Note: if changing dividers -> change the regular expression\n    dividerDot = '.';\n\nlet formSelector;\n\n/**\n * Fill data from Form with needed data.\n * @returns Object of Note, that shoul be saved.\n */\nfunction fillData(data, isEditMode) {\n    let dataObj = Object.fromEntries(data);\n\n    if (!isEditMode)\n        dataObj.created = Date.parse(new Date());\n\n    dataObj.dates = parseDatesFromContent(dataObj.content);\n\n    return dataObj;\n}\n\n/**\n * Found and parse dates with format like '02.09.2022' or '02/09/2022'\n * @param {String} content\n * @returns array of milliseconds founded dates\n */\nfunction parseDatesFromContent(content) {\n    const dateStrings = content.match(dateReg);\n\n    if (!dateStrings)\n        return [];\n\n    let datesArray = dateStrings.map((str) => {\n        const [day, month, year] = str.indexOf(dividerSlash) > 0\n            ? str.split(dividerSlash)\n            : str.split(dividerDot);\n\n        return new Date(+year, +month - 1, +day).getTime();\n    });\n\n    return datesArray;\n}\n\nfunction updateForm(data) {\n\n    const { name, category, content, id } = data;\n\n    const form = document.querySelector(formSelector),\n        titleElement = form.querySelector('.modal__title'),\n        noteNameElement = form.querySelector('input[name=\"name\"]'),\n        typesElement = form.querySelector('#noteTypes'),\n        contentElement = form.querySelector('input[name=\"content\"]'),\n        btnSubmit = form.querySelector('.btn');\n\n    noteNameElement.value = name;\n    typesElement.value = category;\n    contentElement.value = content;\n\n    titleElement.textContent = \"Edit your note\";\n    btnSubmit.textContent = 'Save';\n    form.setAttribute('data-id', id);\n}\n\nfunction resetForm() {\n    console.warn('form.reset');\n    const form = document.querySelector(formSelector);\n    form.reset();\n    form.setAttribute('data-noteId', -1);\n\n    const titleElement = form.querySelector('.modal__title'),\n        btnSubmit = form.querySelector('.btn');\n\n    titleElement.textContent = \"Fill the fields\";\n    btnSubmit.textContent = \"Create\";\n}\n\nfunction form(selector) {\n    formSelector = selector;\n\n    const form = document.querySelector(formSelector);\n\n    bindPostData(form);\n\n    function bindPostData(form) {\n        form.addEventListener('submit', (e) => {\n            e.preventDefault();\n\n            const statusMessage = document.createElement('img');\n            statusMessage.src = message.loading;\n            statusMessage.style.cssText = `\n                display: block;\n                margin: 0 auto;\n            `;\n\n            form.insertAdjacentElement('afterend', statusMessage);\n\n            sendDataToServer(form, statusMessage);\n        });\n    }\n\n    function sendDataToServer(form, statusMessage) {\n\n        const formData = new FormData(form);\n        const noteId = form.getAttribute('data-id'),\n            isEditMode = noteId > -1;\n\n        const data = fillData(formData.entries(), isEditMode);\n        const json = JSON.stringify(data);\n        let url = urlNotes;\n\n        if (isEditMode)\n            url += `/${noteId}`;\n\n        const promise = isEditMode ? editData : postData;\n\n        promise(url, json)\n            .then(data => {\n                console.log(data);\n                showThanksModal(isEditMode ? message.successEdit : message.success);\n                statusMessage.remove();\n            })\n            .catch(() => {\n                showThanksModal(message.failure);\n            });\n    }\n}\n\nexport default form;\nexport { resetForm, updateForm };","import { resetForm, updateForm } from './form';\n\nlet modalSelector;\n\nfunction openModal() {\n\n    const modal = document.querySelector(modalSelector);\n\n    modal.classList.add('show');\n    modal.classList.remove('hide');\n\n    document.body.style.overflow = 'hidden';\n}\n\nfunction openModalForNote(note) {\n\n    openModal();\n    updateForm(note);\n}\n\nfunction closeModal() {\n    const modal = document.querySelector(modalSelector);\n\n    modal.classList.add('hide');\n    modal.classList.remove('show');\n\n    document.body.style.overflow = '';\n}\n\nfunction showThanksModal(message) {\n    const previousModalDialog = document.querySelector('.modal__dialog');\n\n    previousModalDialog.classList.add('hide');\n    openModal();\n\n    const thanksModal = document.createElement('div');\n    thanksModal.classList.add('modal__dialog');\n    thanksModal.innerHTML = `\n        <div class=\"modal__content\">\n            <div data-close class=\"modal__close\">×</div>\n            <div class=\"modal__title\">${message}</div>            \n        </div>\n    `;\n\n    document.querySelector('.modal').append(thanksModal);\n    console.log('start timer');\n\n    setTimeout(() => {\n        thanksModal.remove();\n        previousModalDialog.classList.add('show');\n        previousModalDialog.classList.remove('hide');\n        closeModal('.modal');\n\n        resetForm();\n    }, 4000);\n}\n\nfunction modal(triggerSelector, selector) {\n    modalSelector = selector;\n\n    const modal = document.querySelector(modalSelector);\n\n    modal.addEventListener('click', (e) => {\n        if (e.target === modal || e.target.classList.contains('modal__close')) {\n            console.log('modal close event handler')\n            closeModal();\n        }\n    });\n\n    document.querySelectorAll(triggerSelector)\n        .forEach((btn) => btn.addEventListener('click', () => openModal()));\n\n    document.addEventListener('keydown', (e) => {\n        if (e.code === \"Escape\" && modal.classList.contains(\"show\")) {\n            closeModal();\n        }\n    });\n}\n\nexport default modal;\nexport { showThanksModal, openModalForNote };","import { getData, editData, deleteData } from \"../services/services\";\nimport { openModalForNote, showThanksModal } from './modal';\n\nconst urlNotes = 'http://localhost:3000/notes',\n    message = {\n        successArchive: 'Note has been archived',\n        successDelete: 'Note has been deleted',\n        failure: 'Oops, something went wrong...'\n    };\n\nfunction notes() {\n\n    const maxLength = 30,\n        categoryTitleByValue = {\n            task: 'Task',\n            random: 'Random Thought',\n            idea: 'Idea'\n        }\n\n    let noteById = [],\n        notesByCategory = {};\n\n    class NoteItem {\n        constructor(id, name, created, category, content, dates, parentSelector) {\n            this.id = id;\n            this.name = name;\n            this.created = created;\n            this.category = category;\n            this.content = content;\n            this.dates = dates;\n            this.parent = document.querySelector(parentSelector);\n        }\n\n        render() {\n            const element = document.createElement('tr');\n            element.classList.add('note__item');\n\n            const nameFormatted = formatString(this.name),\n                createdAsString = parseDate(this.created),\n                categoryName = getCategoryName(this.category),\n                contentFormatted = formatString(this.content),\n                datesAsString = parseDates(this.dates);\n\n            element.innerHTML = `               \n                <td>${nameFormatted}</td>\n                <td>${createdAsString}</td>\n                <td>${categoryName}</td>\n                <td>${contentFormatted}</td>\n                <td>${datesAsString}</td>\n                <td>\n                    <img id=\"edit\" data-noteId=\"${this.id}\" data-modal class=\"btn_icon\" src=\"icons/edit.svg\" alt=\"edit\">\n                    <img id=\"archive\" data-noteId=\"${this.id}\" class=\"btn_icon\" src=\"icons/archive_dark.svg\" alt=\"archive\">\n                    <img id=\"delete\" data-noteId=\"${this.id}\" class=\"btn_icon\" src=\"icons/delete_dark.svg\" alt=\"delete\">\n                </td>            \n                `;\n\n            subscribeElement(element);\n            this.parent.append(element);\n        }\n    }\n\n    class ArchivedNoteItem {\n        constructor(id, name, created, category, content, dates, parentSelector) {\n            this.id = id;\n            this.name = name;\n            this.created = created;\n            this.category = category;\n            this.content = content;\n            this.dates = dates;\n            this.parent = document.querySelector(parentSelector);\n        }\n\n        render() {\n            const element = document.createElement('tr');\n            element.classList.add('note__item');\n\n            const nameFormatted = formatString(this.name),\n                createdAsString = parseDate(this.created),\n                categoryName = getCategoryName(this.category),\n                contentFormatted = formatString(this.content),\n                datesAsString = parseDates(this.dates);\n\n            element.innerHTML = `               \n                <td>${nameFormatted}</td>\n                <td>${createdAsString}</td>\n                <td>${categoryName}</td>\n                <td>${contentFormatted}</td>\n                <td>${datesAsString}</td>\n                <td>\n                    <img id=\"unarchive\" data-noteId=\"${this.id}\" class=\"btn_icon\" src=\"icons/unarchive.svg\" alt=\"unarchive\">\n                    <img id=\"delete\" data-noteId=\"${this.id}\" class=\"btn_icon\" src=\"icons/delete_dark.svg\" alt=\"delete\">\n                </td>            \n                `;\n\n            subscribeElement(element);\n            this.parent.append(element);\n        }\n    }\n\n    class CategoryItem {\n        constructor(value, activeCount, archivedCount, parentSelector) {\n            this.value = value;\n            this.activeCount = activeCount;\n            this.archivedCount = archivedCount;\n            this.parent = document.querySelector(parentSelector);\n        }\n        render() {\n            const element = document.createElement('tr');\n            element.classList.add('note__item');\n\n            const categoryName = getCategoryName(this.value);\n\n            element.innerHTML = `               \n                <td>${categoryName}</td>\n                <td>${this.activeCount}</td>\n                <td>${this.archivedCount}</td>         \n                `;\n            this.parent.append(element);\n        }\n        updateWithNote(note) {\n            if (note.isArchived)\n                this.archivedCount++;\n            else\n                this.activeCount++;\n        }\n    }\n\n    function getNoteIdFromElement(element) {\n        return Number(element.getAttribute('data-noteId'));\n    }\n\n    function subscribeElement(element) {\n        const btnEdit = element.querySelector(\"#edit\"),\n            btnArchive = element.querySelector(\"#archive\"),\n            btnUnarchive = element.querySelector(\"#unarchive\"),\n            btnDelete = element.querySelector(\"#delete\");\n\n        if (btnEdit)\n            btnEdit.addEventListener('click', (e) => {\n                e.preventDefault();\n                const noteId = getNoteIdFromElement(e.target);\n                openModalForNote(noteById[noteId]);\n            });\n\n        if (btnArchive)\n            btnArchive.addEventListener('click', (e) => {\n                e.preventDefault();\n                const noteId = getNoteIdFromElement(e.target);\n                changeNoteArchivation(noteById[noteId], true);\n            })\n\n        if (btnUnarchive)\n            btnUnarchive.addEventListener('click', (e) => {\n                e.preventDefault();\n                const noteId = getNoteIdFromElement(e.target);\n                changeNoteArchivation(noteById[noteId], false);\n            })\n\n        if (btnDelete)\n            btnDelete.addEventListener('click', (e) => {\n                e.preventDefault();\n                const noteId = getNoteIdFromElement(e.target);\n                deleteNoteFromServer(noteId);\n            })\n    }\n\n    function changeNoteArchivation(note, isArchived) {\n        note.isArchived = isArchived;\n        const json = JSON.stringify(note);\n        console.log(json);\n\n        editData(urlNotes + `/${note.id}`, json)\n            .then(data => {\n                console.log(data);\n                showThanksModal(message.successArchive);\n            })\n            .catch(() => {\n                showThanksModal(message.failure);\n            });\n    }\n\n    function deleteNoteFromServer(noteId) {\n        deleteData(urlNotes + `/${noteId}`)\n            .then(data => {\n                console.log(data);\n                showThanksModal(message.successDelete);\n            })\n            .catch(() => {\n                showThanksModal(message.failure);\n            });\n    }\n\n    function formatString(string) {\n        if (string.length < maxLength)\n            return string;\n\n        string = string.substring(0, maxLength);\n        string += '...';\n        return string;\n    }\n\n    function getZero(num) {\n        if (num >= 0 && num < 10) {\n            return `0${num}`;\n        } else {\n            return num;\n        }\n    }\n\n    function parseDate(ms) {\n        const date = new Date(ms);\n        const day = date.getDate();\n        const month = date.getMonth() + 1;\n        const year = date.getFullYear();\n        return `${getZero(day)}.${getZero(month)}.${getZero(year)}`;\n    }\n\n    function parseDates(datesArray) {\n        if (!datesArray || datesArray.length == 0)\n            return [];\n\n        if (datesArray.length == 1)\n            return parseDate(datesArray[0]);\n\n        return datesArray.reduce((result, current) =>\n            `${typeof (result) === 'number' ? parseDate(result) : result}, ${parseDate(current)}`);\n    }\n\n    function getCategoryName(categoryType) {\n        if (!categoryTitleByValue[categoryType])\n            return \"Not recognized\";\n\n        return categoryTitleByValue[categoryType];\n    }\n\n    function updateSummary() {\n        noteById.forEach((item) => {\n            const categoryItem = notesByCategory[item.category];\n            if (categoryItem)\n                categoryItem.updateWithNote(item);\n            else\n                notesByCategory[item.category] = new CategoryItem(\n                    item.category,\n                    item.isArchived ? 0 : 1,\n                    item.isArchived ? 1 : 0,\n                    \"#table_summary\");\n        });\n\n        for (const [key, value] of Object.entries(notesByCategory)) {\n            value.render();\n        }\n    }\n\n    getData('http://localhost:3000/notes')\n        .then(data => {\n            data.forEach((item) => {\n                noteById[item.id] = item;\n\n                if (item.isArchived)\n                    new ArchivedNoteItem(item.id, item.name, item.created, item.category, item.content, item.dates, \"#table_archieved\").render();\n                else\n                    new NoteItem(item.id, item.name, item.created, item.category, item.content, item.dates, \"#table_notes\").render();\n            })\n\n        })\n        .then(updateSummary);\n\n}\n\nexport default notes;","const postData = async (url, data) => {\n    \n    const res = await fetch(url, {\n        method: \"POST\",\n        headers: {\n            'Content-type': 'application/json'\n        },\n        body: data\n    });\n\n    return await res.json();\n};\n\nconst getData = async (url) => {\n    const res = await fetch(url);\n\n    if (!res.ok) {\n        throw new Error(`Could not fetch ${url}, status: ${res.status}`);\n    }\n\n    return await res.json();\n};\n\nconst editData = async(url, data) => {\n    \n    const res = await fetch(url, {\n        method: \"PATCH\",\n        headers: {\n            'Content-type': 'application/json'\n        },\n        body: data\n    });\n\n    return await res.json();\n}\n\nconst deleteData = async(url) => {\n    \n    const res = await fetch(url, {\n        method: \"DELETE\",\n        headers: {\n            'Content-type': 'application/json'\n        }\n    });\n\n    return await res.json();\n}\n\nexport {postData, editData, deleteData, getData};","(function(global){\n\n//\n// Check for native Promise and it has correct interface\n//\n\nvar NativePromise = global['Promise'];\nvar nativePromiseSupported =\n  NativePromise &&\n  // Some of these methods are missing from\n  // Firefox/Chrome experimental implementations\n  'resolve' in NativePromise &&\n  'reject' in NativePromise &&\n  'all' in NativePromise &&\n  'race' in NativePromise &&\n  // Older version of the spec had a resolver object\n  // as the arg rather than a function\n  (function(){\n    var resolve;\n    new NativePromise(function(r){ resolve = r; });\n    return typeof resolve === 'function';\n  })();\n\n\n//\n// export if necessary\n//\n\nif (typeof exports !== 'undefined' && exports)\n{\n  // node.js\n  exports.Promise = nativePromiseSupported ? NativePromise : Promise;\n  exports.Polyfill = Promise;\n}\nelse\n{\n  // AMD\n  if (typeof define == 'function' && define.amd)\n  {\n    define(function(){\n      return nativePromiseSupported ? NativePromise : Promise;\n    });\n  }\n  else\n  {\n    // in browser add to global\n    if (!nativePromiseSupported)\n      global['Promise'] = Promise;\n  }\n}\n\n\n//\n// Polyfill\n//\n\nvar PENDING = 'pending';\nvar SEALED = 'sealed';\nvar FULFILLED = 'fulfilled';\nvar REJECTED = 'rejected';\nvar NOOP = function(){};\n\nfunction isArray(value) {\n  return Object.prototype.toString.call(value) === '[object Array]';\n}\n\n// async calls\nvar asyncSetTimer = typeof setImmediate !== 'undefined' ? setImmediate : setTimeout;\nvar asyncQueue = [];\nvar asyncTimer;\n\nfunction asyncFlush(){\n  // run promise callbacks\n  for (var i = 0; i < asyncQueue.length; i++)\n    asyncQueue[i][0](asyncQueue[i][1]);\n\n  // reset async asyncQueue\n  asyncQueue = [];\n  asyncTimer = false;\n}\n\nfunction asyncCall(callback, arg){\n  asyncQueue.push([callback, arg]);\n\n  if (!asyncTimer)\n  {\n    asyncTimer = true;\n    asyncSetTimer(asyncFlush, 0);\n  }\n}\n\n\nfunction invokeResolver(resolver, promise) {\n  function resolvePromise(value) {\n    resolve(promise, value);\n  }\n\n  function rejectPromise(reason) {\n    reject(promise, reason);\n  }\n\n  try {\n    resolver(resolvePromise, rejectPromise);\n  } catch(e) {\n    rejectPromise(e);\n  }\n}\n\nfunction invokeCallback(subscriber){\n  var owner = subscriber.owner;\n  var settled = owner.state_;\n  var value = owner.data_;  \n  var callback = subscriber[settled];\n  var promise = subscriber.then;\n\n  if (typeof callback === 'function')\n  {\n    settled = FULFILLED;\n    try {\n      value = callback(value);\n    } catch(e) {\n      reject(promise, e);\n    }\n  }\n\n  if (!handleThenable(promise, value))\n  {\n    if (settled === FULFILLED)\n      resolve(promise, value);\n\n    if (settled === REJECTED)\n      reject(promise, value);\n  }\n}\n\nfunction handleThenable(promise, value) {\n  var resolved;\n\n  try {\n    if (promise === value)\n      throw new TypeError('A promises callback cannot return that same promise.');\n\n    if (value && (typeof value === 'function' || typeof value === 'object'))\n    {\n      var then = value.then;  // then should be retrived only once\n\n      if (typeof then === 'function')\n      {\n        then.call(value, function(val){\n          if (!resolved)\n          {\n            resolved = true;\n\n            if (value !== val)\n              resolve(promise, val);\n            else\n              fulfill(promise, val);\n          }\n        }, function(reason){\n          if (!resolved)\n          {\n            resolved = true;\n\n            reject(promise, reason);\n          }\n        });\n\n        return true;\n      }\n    }\n  } catch (e) {\n    if (!resolved)\n      reject(promise, e);\n\n    return true;\n  }\n\n  return false;\n}\n\nfunction resolve(promise, value){\n  if (promise === value || !handleThenable(promise, value))\n    fulfill(promise, value);\n}\n\nfunction fulfill(promise, value){\n  if (promise.state_ === PENDING)\n  {\n    promise.state_ = SEALED;\n    promise.data_ = value;\n\n    asyncCall(publishFulfillment, promise);\n  }\n}\n\nfunction reject(promise, reason){\n  if (promise.state_ === PENDING)\n  {\n    promise.state_ = SEALED;\n    promise.data_ = reason;\n\n    asyncCall(publishRejection, promise);\n  }\n}\n\nfunction publish(promise) {\n  var callbacks = promise.then_;\n  promise.then_ = undefined;\n\n  for (var i = 0; i < callbacks.length; i++) {\n    invokeCallback(callbacks[i]);\n  }\n}\n\nfunction publishFulfillment(promise){\n  promise.state_ = FULFILLED;\n  publish(promise);\n}\n\nfunction publishRejection(promise){\n  promise.state_ = REJECTED;\n  publish(promise);\n}\n\n/**\n* @class\n*/\nfunction Promise(resolver){\n  if (typeof resolver !== 'function')\n    throw new TypeError('Promise constructor takes a function argument');\n\n  if (this instanceof Promise === false)\n    throw new TypeError('Failed to construct \\'Promise\\': Please use the \\'new\\' operator, this object constructor cannot be called as a function.');\n\n  this.then_ = [];\n\n  invokeResolver(resolver, this);\n}\n\nPromise.prototype = {\n  constructor: Promise,\n\n  state_: PENDING,\n  then_: null,\n  data_: undefined,\n\n  then: function(onFulfillment, onRejection){\n    var subscriber = {\n      owner: this,\n      then: new this.constructor(NOOP),\n      fulfilled: onFulfillment,\n      rejected: onRejection\n    };\n\n    if (this.state_ === FULFILLED || this.state_ === REJECTED)\n    {\n      // already resolved, call callback async\n      asyncCall(invokeCallback, subscriber);\n    }\n    else\n    {\n      // subscribe\n      this.then_.push(subscriber);\n    }\n\n    return subscriber.then;\n  },\n\n  'catch': function(onRejection) {\n    return this.then(null, onRejection);\n  }\n};\n\nPromise.all = function(promises){\n  var Class = this;\n\n  if (!isArray(promises))\n    throw new TypeError('You must pass an array to Promise.all().');\n\n  return new Class(function(resolve, reject){\n    var results = [];\n    var remaining = 0;\n\n    function resolver(index){\n      remaining++;\n      return function(value){\n        results[index] = value;\n        if (!--remaining)\n          resolve(results);\n      };\n    }\n\n    for (var i = 0, promise; i < promises.length; i++)\n    {\n      promise = promises[i];\n\n      if (promise && typeof promise.then === 'function')\n        promise.then(resolver(i), reject);\n      else\n        results[i] = promise;\n    }\n\n    if (!remaining)\n      resolve(results);\n  });\n};\n\nPromise.race = function(promises){\n  var Class = this;\n\n  if (!isArray(promises))\n    throw new TypeError('You must pass an array to Promise.race().');\n\n  return new Class(function(resolve, reject) {\n    for (var i = 0, promise; i < promises.length; i++)\n    {\n      promise = promises[i];\n\n      if (promise && typeof promise.then === 'function')\n        promise.then(resolve, reject);\n      else\n        resolve(promise);\n    }\n  });\n};\n\nPromise.resolve = function(value){\n  var Class = this;\n\n  if (value && typeof value === 'object' && value.constructor === Class)\n    return value;\n\n  return new Class(function(resolve){\n    resolve(value);\n  });\n};\n\nPromise.reject = function(reason){\n  var Class = this;\n\n  return new Class(function(resolve, reject){\n    reject(reason);\n  });\n};\n\n})(typeof window != 'undefined' ? window : typeof global != 'undefined' ? global : typeof self != 'undefined' ? self : this);\n","if (window.NodeList && !NodeList.prototype.forEach) {\r\n    NodeList.prototype.forEach = function (callback, thisArg) {\r\n        thisArg = thisArg || window;\r\n        for (var i = 0; i < this.length; i++) {\r\n            callback.call(thisArg, this[i], i, this);\r\n        }\r\n    };\r\n}\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var Promise = require('es6-promise-polyfill').Promise;\nimport 'nodelist-foreach-polyfill';\n\nimport modal from './modules/modal';\nimport notes from './modules/notes';\nimport form from './modules/form';\n\nwindow.addEventListener('DOMContentLoaded', () => {\n\n    modal('[data-modal]', '.modal');\n    notes();\n    form('form');\n});"],"names":[],"sourceRoot":""}